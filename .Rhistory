count(sentiment) %>% # pocitanie statistik v tabulke nizsie sa deje tu
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
circos.clear()
circos.par(gap.after = c(rep(2, length(unique(to_plot[[1]])) - 1), 15,
rep(2, length(unique(to_plot[[2]])) - 1), 15), gap.degree=2)
myColors = c("positive" = "#D7DBDD", "negative" = "#D7DBDD")
chordDiagram(words, grid.col = myColors, transparency = 0.4, annotationTrack = c("name", "grid"),
annotationTrackHeight = c(0.01, 0.02))
words
w <- words %>%
inner_join(get_sentiments("bing")) %>% # zoznam slov s priradenym sentimentom
count(sentiment) %>% # pocitanie statistik v tabulke nizsie sa deje tu
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
w
chordDiagram(wo, grid.col = myColors, transparency = 0.4, annotationTrack = c("name", "grid"),
annotationTrackHeight = c(0.01, 0.02))
chordDiagram(w, grid.col = myColors, transparency = 0.4, annotationTrack = c("name", "grid"),
annotationTrackHeight = c(0.01, 0.02))
View(patterns)
size <- length(patterns$Description)
value<-vector(mode="character")
sentiments <- data.frame("negative", "positive")
nrc <- read_csv("sentiments/NRC.csv")
char_sentiment <- patterns %>%
inner_join(nrc, "word") %>%
filter(Name %in% c("CommunityOfTrust","UnityOfPurpose", "LOCK THEM UP TOGETHER")
& !sentiment %in% c("positive","negative")) %>%
group_by(Name, sentiment) %>%
count(Name, sentiment) %>%
select(Name, sentiment, char_sentiment_count=n)
char_sentiment <- patterns %>%
inner_join(nrc, "word") %>%
group_by(Name, sentiment) %>%
count(Name, sentiment) %>%
select(Name, sentiment, char_sentiment_count=n)
tokens <- patterns %>%
mutate(dialogue = as.character(patterns$Description)) %>%
unnest_tokens(word, dialogue)
char_sentiment <- tokens %>%
inner_join(nrc, "word") %>%
filter(Name %in% c("CommunityOfTrust","UnityOfPurpose", "LOCK THEM UP TOGETHER")
& !sentiment %in% c("positive","negative")) %>%
group_by(Name, sentiment) %>%
count(Name, sentiment) %>%
select(Name, sentiment, char_sentiment_count=n)
total_char <- tokens %>%
inner_join(nrc, "word") %>%
filter(Name %in% c("CommunityOfTrust","UnityOfPurpose", "LOCK THEM UP TOGETHER")
& !sentiment %in% c("positive","negative")) %>%
count(Name) %>%
select(Name, total=n)
char_sentiment %>%
inner_join(total_char, by="Name") %>%
mutate(percent = char_sentiment_count / total * 100 ) %>%
select(-char_sentiment_count, -total) %>%
spread(Name, percent) %>%
chartJSRadar(showToolTipLabel = T, main="Character and Sentiment Radar", maxScale=22, responsive=T,
addDots = T,
colMatrix = grDevices::col2rgb(c("#FA8072","#04700A","#062D82","#99F1EB","#F39C12")),
lineAlpha = 0.7, polyAlpha = 0.05)
inner_join(nrc, "word") %>%
count(word, value, sort=T) %>%
mutate(contribution = n * value,
sentiment = ifelse(contribution<=0, "Negative", "Positive")) %>% #another variable
arrange(desc(abs(contribution))) %>%
head(20)
inner_join(nrc, "word", copy=TRUE) %>%
count(word, value, sort=T) %>%
mutate(contribution = n * value,
sentiment = ifelse(contribution<=0, "Negative", "Positive")) %>% #another variable
arrange(desc(abs(contribution))) %>%
head(20)
inner_join(nrc, "word", copy=TRUE, by=character()) %>%
count(word, value, sort=T) %>%
mutate(contribution = n * value,
sentiment = ifelse(contribution<=0, "Negative", "Positive")) %>% #another variable
arrange(desc(abs(contribution))) %>%
head(20)
inner_join(nrc, "word", copy=TRUE, by=character()) %>%
count(word, Name, sort=T) %>%
mutate(contribution = n * value,
sentiment = ifelse(contribution<=0, "Negative", "Positive")) %>% #another variable
arrange(desc(abs(contribution))) %>%
head(20)
inner_join(nrc, "word", copy=TRUE, by=character()) %>%
count(word, sort=T) %>%
mutate(contribution = n * value,
sentiment = ifelse(contribution<=0, "Negative", "Positive")) %>% #another variable
arrange(desc(abs(contribution))) %>%
head(20)
ggplot(melt(cat_freq),aes(x=variable, y=value, fill = patternName)) +
geom_col(position = "dodge") + coord_flip() + xlab("unigrams") + ylab("unigrams_frequency") +
theme() + ggtitle("Most used words across pattern descriptions")
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=tokenizer_2))
s.tdm <- removeSparseTerms(s.tdm, 0.999)
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
tokenizer_2 <- function(x){
NGramTokenizer(x, Weka_control(min=2, max=2))
}
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=tokenizer_2))
s.tdm <- removeSparseTerms(s.tdm, 0.999)
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
bigrams <- frequentBigrams(patterns$Description)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq>4) %>%
graph_from_data_frame()
options(repr.plot.width=8, repr.plot.height=5)
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
bigrams <- frequentBigrams(patterns$Description)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq>4) %>%
graph_from_data_frame()
options(repr.plot.width=8, repr.plot.height=5)
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
bigrams_network
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq>4) %>%
graph_from_data_frame()
options(repr.plot.width=8, repr.plot.height=5)
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
print(bigrams_network)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq>4) %>%
graph_from_data_frame()
print(bigrams_network)
tokenizer_2 <- function(x){
NGramTokenizer(x, Weka_control(min=1, max=1))
}
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=tokenizer_2))
s.tdm <- removeSparseTerms(s.tdm, 0.999)
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq>4) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
bigrams <- frequentBigrams(patterns$Description)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq>1) %>%
graph_from_data_frame()
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
graph_from_data_frame()
bigrams_network <- frequentBigrams(patterns$Description) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
bigrams_network <- frequentBigrams(patterns$Description) %>%
filter(freq>1) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
print(bigrams_network)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, sep=" ") %>%
filter(freq>1) %>%
graph_from_data_frame()
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq>1) %>%
graph_from_data_frame()
View(bigrams)
tokenizer_2 <- function(x){
NGramTokenizer(x, Weka_control(min=2, max=2))
}
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=tokenizer_2))
s.tdm <- removeSparseTerms(s.tdm, 0.999)
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
View(bigrams)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 2) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name, fill=Language), repel=T) +
theme_void() +
labs(title="Bigram Network")
print(bigrams_network)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=patterns$Name) %>%
filter(freq > 2) %>%
graph_from_data_frame()
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 2) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
tokenizer_2 <- function(x){
NGramTokenizer(x, Weka_control(min=3, max=3))
}
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=tokenizer_2))
s.tdm <- removeSparseTerms(s.tdm, 0.999)
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
View(bigrams)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 2) %>%
graph_from_data_frame()
set.seed(123)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 3) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2", "word3"), sep=" ") %>%
filter(freq > 3) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
tokenizer_2 <- function(x){
NGramTokenizer(x, Weka_control(min=3, max=3))
}
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=tokenizer_2))
s.tdm <- removeSparseTerms(s.tdm, 0.999)
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
View(bigrams)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2", "word3"), sep=" ") %>%
filter(freq > 3) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
ggplot(melt(cat_freq),aes(x=variable, y=value, fill = patternName)) +
geom_col(position = "dodge") + coord_flip() + xlab("unigrams") + ylab("unigrams_frequency") +
theme() + ggtitle("Most used words across pattern descriptions")
bigramTokenizer <- function(x){
NGramTokenizer(x, Weka_control(min=3, max=3))
}
bigramTokenizer <- function(x){
NGramTokenizer(x, Weka_control(min=2, max=3))
}
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=bigramTokenizer))
s.tdm <- removeSparseTerms(s.tdm, 0.999)
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
View(bigrams)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 3) %>%
graph_from_data_frame()
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 2) %>%
graph_from_data_frame()
bigramTokenizer <- function(x){
NGramTokenizer(x, Weka_control(min=2, max=3))
}
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=bigramTokenizer))
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
View(bigrams)
bigrams_network <- frequentBigrams(patterns$Description) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 2) %>%
graph_from_data_frame()
set.seed(123)
bigramTokenizer <- function(x){
NGramTokenizer(x, Weka_control(min=2, max=2))
}
frequentBigrams <- function(text){
s.cor <- VCorpus(VectorSource(text))
s.cor.cl <- cleanCorpus(s.cor)
s.tdm <- TermDocumentMatrix(s.cor.cl, control=list(tokenize=bigramTokenizer))
m <- as.matrix(s.tdm)
word_freqs <- sort(rowSums(m), decreasing=T)
dm <- data.frame(word=names(word_freqs), freq=word_freqs)
return(dm)
}
bigrams <- frequentBigrams(patterns$Description)
frequentBigrams <- function(text){
cleanCorpus <- cleanCorpus(VCorpus(VectorSource(text)))
dtm <- TermDocumentMatrix(cleanCorpus, control=list(tokenize=bigramTokenizer))
word_freqs <- sort(rowSums(as.matrix(dtm)), decreasing=T)
return (dm <- data.frame(word=names(word_freqs), freq=word_freqs))
}
bigrams_network <- frequentBigrams(patterns$Associations) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 2) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
print(bigrams_network)
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Bigram Network")
bigrams_network <- frequentBigrams(patterns$Associations) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 2) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Connections between association sections of org. patterns")
set.seed(2020)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_network, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
ggraph(bigrams_network, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Connections between association sections of org. patterns")
patterns <- read.delim("data/patterns.txt", sep="@")
patterns <- patterns[, -1]
text <- intersect(patterns$Associations, patterns$Associations)
bigrams_network <- frequentBigrams(text) %>%
separate(word, c("word1", "word2"), sep=" ") %>%
filter(freq > 2) %>%
graph_from_data_frame()
set.seed(123)
arrows <- grid::arrow(type="closed", length=unit(0.15, "inches"))
ggraph(bigrams_network, layout="fr") +
geom_edge_link(aes(edge_alpha=freq), show.legend = F, arrow=arrows, end_cap=circle(0.07,'inches')) +
geom_edge_density(aes(fill = freq)) +
geom_node_point(color="#99F1EB", size=5) +
geom_node_text(aes(label=name), repel=T) +
theme_void() +
labs(title="Connections between association sections of org. patterns")
